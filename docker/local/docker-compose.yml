version: "3.5"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

services:
  php:
    container_name: ${APP_NAME}-php
    depends_on:
        - db
        - redis
    build:
      target: ${PHP_TARGET}
      args:
        user: ${USER}
        uid: ${USER_ID}
      context: ../php
      dockerfile: Dockerfile
    volumes:
      - "../../:/var/www/html"
    restart: always
    extra_hosts:
        - '${XDEBUG_REMOTE_HOST}:host-gateway'
    environment:
      COMPOSER_MEMORY_LIMIT: ${COMPOSER_MEMORY_LIMIT}
      XDEBUG_CONFIG: client_host=${XDEBUG_REMOTE_HOST} client_port=${XDEBUG_STORM_PORT} remote_enable=1
      PHP_IDE_CONFIG: serverName=${XDEBUG_STORM_SERVER_NAME}
    networks:
      - default

  db:
    container_name: ${DB_HOST}
    image: postgres:16
    restart: always
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - default

  redis:
    container_name: ${REDIS_HOST}
    image: redis:7
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD}"]
    volumes:
       - redis_data:/data
    networks:
      - default

  nginx:
    container_name: ${APP_NAME}-nginx
    restart: always
    image: nginx:stable
    depends_on:
      - php
    ports:
      - "${NGINX_PORT_ON_HOST}:80"
    volumes:
      - "./nginx/default.template:/etc/nginx/conf.d/default.template"
      - "../../:/var/www/html"
    environment:
      PHP_FPM_HOSTNAME: ${APP_NAME}-php
      PHP_FPM_PORT_ON_DOCKER: 9000
    # command подменит в шаблоне хоста переменные на значения из заданных переменных окружения
    command: /bin/bash -c "envsubst \"`for v in $$(compgen -v);do printf '$${%s} ' $$v;done`'\" < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    networks:
      - default

networks:
  default:
    driver: bridge
    name: "${APP_NAME}-network"
